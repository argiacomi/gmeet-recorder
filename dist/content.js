const c={Background:"Background",Content:"Content",Devtools:"Devtools",Offscreen:"Offscreen",Options:"Options",Popup:"Popup",Sidepanel:"Sidepanel"};function d(e,...t){if(!e||typeof e!="string"){console.error("Invalid location provided to logger");return}e===c.Background?console.log(`[${e}]`,...t):Object.values(c).includes(e)?(console.log(...t),(async()=>{try{chrome.runtime.sendMessage({type:e,log:t})}catch(i){console.error("Error sending log message:",i)}})()):(console.warn("Unknown log location:",e),console.log(e,...t))}const r=(...e)=>d(c.Content,...e),g="lib/inject.js";let n=!1,o=!1;function p(e){var t=document.createElement("script");t.setAttribute("src",chrome.runtime.getURL(e)),(document.head||document.documentElement).appendChild(t)}p(g);function u(){const e=document.getElementById("dg-proxy-check");return e&&e.getAttribute("content")==="true"}const s=chrome.runtime.connect({name:"content"});s.onMessage.addListener(async e=>{try{if(!u()){r("Error: No Stenographer");return}switch(e.type){case"start-recording":await l();break;case"pause-recording":case"resume-recording":await f();break;case"stop-recording":await a();break}}catch(t){r(`Error in with ${e.type} message:`,t)}});async function l(){if(o)return r("Error: Recording already in Progress"),!1;try{return window.postMessage({type:"START_RECORDING"},"*"),s.postMessage({type:"recording-started"}),r("Recording Started"),o=!0,!0}catch(e){return r("Error: Starting Recording",e),o=!1,!1}}async function f(){try{if(!n)window.postMessage({type:"PAUSE_RECORDING"},"*"),s.postMessage({type:"recording-paused"}),r("Recording Paused");else if(n)window.postMessage({type:"RESUME_RECORDING"},"*"),s.postMessage({type:"recording-resumed"}),r("Recording Resumed");else return r("Error: No Recording to pause/resume"),!1;return n=!n,!0}catch(e){return r("Error: Pausing Recording",e),!1}}async function a(){try{return o?(window.postMessage({type:"STOP_RECORDING"},"*"),s.postMessage({type:"recording-stopped"}),r("Recording Stopped"),n=!1,o=!1,!0):(r("Error: No Recording to stop"),!1)}catch(e){return r("Error: Stopping Recording",e),!1}}window.addEventListener("beforeunload",async()=>{o&&(await a(),r("Recording Stopped due to page unload"))});
